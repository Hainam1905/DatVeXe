/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package datvexe;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author huynh
 */
public class UpGara extends javax.swing.JDialog {

    /**
     * Creates new form AddNewGara
     */
    
    String garaName0=""; 
    String active0=""; 
    String account0=""; 
    String picture0=""; 
    String busResNum0=""; 
    String saveFolder = System.getProperty("user.dir")+"\\galaryPicture\\";
    String nameofPicture ="";
    File file; 
    
    //check infor: 
    int empty = -1; 
    int duplicateGaraName = -2;
    int duplicateAccount = -3; 
    int duplicateBusResNum = -4; 
    public UpGara(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    public UpGara(java.awt.Frame parent, boolean modal, String garaName, String picture, String review, String BusResNum ,String active, String account, String password) {
        super(parent, modal);
        initComponents();
        showInfor(garaName, picture, review, BusResNum, active,account, password);
        this.garaName0 = garaName; 
        this.active0 = active; 
        if(account!=null) this.account0 = account;
        
        this.picture0 = picture;
        this.busResNum0 = BusResNum;
        nameofPicture = picture; 
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btUpdate = new javax.swing.JButton();
        txGaraName = new javax.swing.JTextField();
        txGaraReview = new javax.swing.JTextField();
        txBusResNum = new javax.swing.JTextField();
        cbStatement = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txAccount = new javax.swing.JTextField();
        txPassword = new javax.swing.JTextField();
        lbshowPicture = new javax.swing.JLabel();
        btPickPicture = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Tên nhà xe");

        jLabel2.setText("Hình ảnh");

        jLabel3.setText("Đánh giá");

        jLabel4.setText("Giấy phép đăng kí kinh doanh");

        btUpdate.setText("Cập nhật thông tin nhà xe");
        btUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUpdateActionPerformed(evt);
            }
        });

        cbStatement.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Đang hợp tác", "Ngừng hợp tác" }));
        cbStatement.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbStatementItemStateChanged(evt);
            }
        });

        jLabel5.setText("Trạng thái");

        jLabel6.setText("Tên đăng nhập");

        jLabel7.setText("Mật khẩu");

        lbshowPicture.setText("jLabel8");

        btPickPicture.setText("Chọn hình ảnh khác");
        btPickPicture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPickPictureActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(110, 110, 110)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbStatement, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txGaraName)
                            .addComponent(txGaraReview)
                            .addComponent(txBusResNum, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                            .addComponent(txAccount)
                            .addComponent(txPassword)
                            .addComponent(btPickPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90)))
                .addComponent(lbshowPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(144, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(lbshowPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txGaraName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btPickPicture))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txGaraReview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txBusResNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbStatement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUpdateActionPerformed
        String garaName = txGaraName.getText(); 
        String garaReview = txGaraReview.getText();
        String BusResNum = txBusResNum.getText(); 
        String active =(String)cbStatement.getSelectedItem();
        
        String account = txAccount.getText();
        String password = txPassword.getText();
        
        DatVeXe datvexe = new DatVeXe();
        Connection conn = datvexe.layKetNoi();
        
        int resultCheck = checkInfor(garaName, garaReview, BusResNum, account, password, conn);
        if(resultCheck==empty){
            JOptionPane.showMessageDialog(rootPane, "Thông tin phải được điền đầy đủ");
            return; 
        }
        
        
        else  if(resultCheck==duplicateGaraName){
            JOptionPane.showMessageDialog(rootPane, "Tên nhà xe đã có trong hệ thống \nVui lòng chọn tên nhà xe khác!");
            return; 
        }
        
        
        
        else  if(resultCheck==duplicateAccount){
            JOptionPane.showMessageDialog(rootPane, "Tên đăng nhập đã có trong hệ thống \nVui lòng chọn tên đăng nhập khác!");
            return; 
                }
        
        
        
        else if(resultCheck==duplicateBusResNum){
            JOptionPane.showMessageDialog(rootPane, "Giấy phép ĐKKD đã có trong hệ thống \nVui lòng kiểm tra lại!");
            return; 
        }
        
        
        
        //hop tac: 
        if(active.equals("Đang hợp tác")){
            //truoc do lam, bay gio van lam: 
            if(active0.equals(active)){
                
                
                String sql = "update Account set Account.Account =?,Password =? where Account.Account=?";
                try {
                    PreparedStatement pstt = conn.prepareStatement(sql);
                    pstt.setString(1, account);
                    pstt.setString(2, password);
                    pstt.setString(3, this.account0);
                    
                    int x = pstt.executeUpdate();
                    if(x>0){
                        
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(UpGara.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                String sql2 = "UPDATE Gara SET Gara_Name=?,Gara_Picture=?,Gara_Review=?,Bus_Res_number=? where Gara_Name=?";
                try {
                    PreparedStatement pstt2 = conn.prepareStatement(sql2);
                    pstt2.setString(1, garaName);
                    pstt2.setString(2, nameofPicture);
                    pstt2.setString(3, garaReview);
                    pstt2.setString(4, BusResNum);
//                    pstt2.setString(5, account);
                    pstt2.setString(5, garaName0);
                    int x = pstt2.executeUpdate();
                    if(x>0){
                        JOptionPane.showMessageDialog(rootPane, "Cập nhật thông tin thành công!");
                        this.dispose();
                    }
                    
                } catch (SQLException ex) {
                    Logger.getLogger(UpGara.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            
            //truoc do nghi, bay gio lam: 
            else{
                
                String sql = "INSERT INTO ACCOUNT values(?,?,?)";
                PreparedStatement pstt;
                try {
                    pstt = conn.prepareStatement(sql);
                    pstt.setString(1, account);
                    pstt.setString(2, password);
                    pstt.setString(3, "Gara");
                    int x = pstt.executeUpdate();
                    if(x>0){
                        
                    }
                 
                } catch (SQLException ex) {
                    Logger.getLogger(UpGara.class.getName()).log(Level.SEVERE, null, ex);
                }
                String sql2 = "UPDATE Gara SET Gara_Name=?,Gara_Picture=?,Gara_Review=?,Bus_Res_number=?,Active=?,Account=? where Gara_Name=?";
                try {
                    PreparedStatement pstt2 = conn.prepareStatement(sql2);
                    pstt2.setString(1, garaName);
                    pstt2.setString(2, nameofPicture);
                    pstt2.setString(3, garaReview);
                    pstt2.setString(4, BusResNum);
                    pstt2.setBoolean(5, true);
                    pstt2.setString(6, account);
                    pstt2.setString(7, garaName0);
                    int x = pstt2.executeUpdate();
                    if(x>0){
                        JOptionPane.showMessageDialog(rootPane, "Cập nhật thông tin thành công!");
                        this.dispose();
                    }
                    
                } catch (SQLException ex) {
                    Logger.getLogger(UpGara.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
            }
        }
        
        //ngung hop tac: 
        else{
            //truoc do nghi, bay gio nghi: 
            if(active0.equals(active)){
                String sql2 = "UPDATE Gara SET Gara_Name=?,Gara_Picture=?,Gara_Review=?,Bus_Res_number=? where Gara_Name=?";
                try {
                    PreparedStatement pstt2 = conn.prepareStatement(sql2);
                    pstt2.setString(1, garaName);
                    pstt2.setString(2, nameofPicture);
                    pstt2.setString(3, garaReview);
                    pstt2.setString(4, BusResNum);
                    pstt2.setString(5, garaName0);
                    int x = pstt2.executeUpdate();
                    if(x>0){
                        JOptionPane.showMessageDialog(rootPane, "Cập nhật thông tin thành công!");
                        this.dispose();
                    }
                    
                } catch (SQLException ex) {
                    Logger.getLogger(UpGara.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            
            //truoc do lam, bay gio nghi: 
            else{
                
             String sql = "UPDATE Gara SET Active='false',Account=NULL WHERE Gara_Name=?";
             String sql2 = "DELETE Account where Account=?";
            
             PreparedStatement pstt;
        
          //cap nhat trang thai: active = false, account = NULL
        try {
            pstt = conn.prepareStatement(sql);
            pstt.setString(1, garaName0);
            int result = pstt.executeUpdate();
            if(result>0){
                
            
            }
        } catch (SQLException ex) {
            Logger.getLogger(ShowStaffList.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        PreparedStatement pstt3;
            try {
                pstt3 = conn.prepareStatement(sql2);
                pstt3.setString(1, this.account0);
                int x= pstt3.executeUpdate();
                if(x>0){
                    JOptionPane.showMessageDialog(rootPane, "Cập nhật nhà xe thành công!");
                    this.dispose();
                }
            } catch (SQLException ex) {
                Logger.getLogger(ShowGaraList.class.getName()).log(Level.SEVERE, null, ex);
            }
        
            }
        }
        
        if(nameofPicture.equals(picture0)==false){
            //save file ra thu muc galaryPicture: 
            //luu file anh ra vung nho
            BufferedImage bImage = null;
            try {

                bImage = ImageIO.read(file);
                ImageIO.write(bImage, "jpg", new File(saveFolder+nameofPicture));
                ImageIO.write(bImage, "png", new File(saveFolder+nameofPicture));
                ImageIO.write(bImage, "jpeg", new File(saveFolder+nameofPicture));
 
         } catch (IOException e) {
               System.out.println("Exception occured :" + e.getMessage());
         }
         System.out.println("Images were written succesfully.");
        }
        
        
        
    }//GEN-LAST:event_btUpdateActionPerformed
    public int checkInfor(String garaName, String garaReview, String busResNum, String account, String password, Connection conn){
        
        
        if(garaName.trim().equals("")|| garaReview.trim().equals("")|| busResNum.trim().equals("")|| account.trim().equals("")||password.trim().equals("")){
            return -1; 
        }
        
        if(this.garaName0.equals(garaName)==false){
            String sql = "select * from Gara where Gara_Name=?";
        try {
            PreparedStatement pstt = conn.prepareStatement(sql);
            pstt.setString(1, garaName);
            ResultSet rs = pstt.executeQuery(); 
            if(rs.next()){
                return -2; 
            }
        } catch (SQLException ex) {
            Logger.getLogger(UpGara.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        
        
       if(this.account0.equals(account)==false){
           String sql2 = "select * from account where account.account = ?";
        try {
            
            PreparedStatement pstt2 = conn.prepareStatement(sql2);
            pstt2.setString(1, account);
            ResultSet rs = pstt2.executeQuery(); 
            if(rs.next()){
                System.out.println("thong tin bi trung roi ne!");
                return -3; 
            }
        } catch (SQLException ex) {
            Logger.getLogger(UpGara.class.getName()).log(Level.SEVERE, null, ex);
        }
       }
        
        if(this.busResNum0.equals(busResNum)==false){
            String sql3 = "select Bus_Res_number from Gara where Bus_Res_number=?";
        try {
            PreparedStatement pstt3 = conn.prepareStatement(sql3);
            pstt3.setString(1, busResNum);
            ResultSet rs = pstt3.executeQuery(); 
            if(rs.next()){
                return -4; 
            }
        } catch (SQLException ex) {
            Logger.getLogger(UpGara.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        
        
        
        return 0;
    }
    
    private void cbStatementItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbStatementItemStateChanged
        if(cbStatement.getSelectedIndex()==0){
            txAccount.setEditable(true);
            txPassword.setEditable(true);
        }else{
            txAccount.setEditable(false);
            txPassword.setEditable(false);
        }
    }//GEN-LAST:event_cbStatementItemStateChanged

    private void btPickPictureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPickPictureActionPerformed
       JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter extension = new FileNameExtensionFilter("Hình ảnh", "jpg","jpeg","png");
        fileChooser.setFileFilter(extension);
        fileChooser.setMultiSelectionEnabled(false);
        
        int x = fileChooser.showDialog(this, "Chọn ảnh nhà xe");
        if(x==JFileChooser.APPROVE_OPTION){
            file = fileChooser.getSelectedFile();
            ImageIcon icon  = new ImageIcon(file.getAbsolutePath());
            Image image = icon.getImage();
            Image newImage = image.getScaledInstance(410,410, java.awt.Image.SCALE_SMOOTH);
            icon = new ImageIcon(newImage);
            lbshowPicture.setIcon(icon);
          //lay ten file
          System.out.println(file.getAbsolutePath());
                
            String finalString = file.getAbsolutePath();
            char s = '\\';
            String result="";
            for(int i =finalString.length()-1;i>=0;i--){
                char compareStr = finalString.charAt(i);
                if(Character.compare(s, compareStr)==0){
                    result = finalString.substring(i+1);
                    break;
                }
            }
            nameofPicture = result; 
            System.out.println("ten cua anh: "+nameofPicture);
            
            
        }
    }//GEN-LAST:event_btPickPictureActionPerformed
    public void showInfor(String garaName, String picture, String review, String BusResNum, String active,String account, String password){
        txGaraName.setText(garaName);
        txGaraReview.setText(review);
        txBusResNum.setText(BusResNum);
        cbStatement.setSelectedItem(active);
        txAccount.setText(account);
        txPassword.setText(password);
        ImageIcon icon  = new ImageIcon(saveFolder+picture);
            Image image = icon.getImage();
            Image newImage = image.getScaledInstance(540,370, java.awt.Image.SCALE_SMOOTH);
            icon = new ImageIcon(newImage);
            lbshowPicture.setIcon(icon);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpGara.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpGara.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpGara.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpGara.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UpGara dialog = new UpGara(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btPickPicture;
    private javax.swing.JButton btUpdate;
    private javax.swing.JComboBox<String> cbStatement;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lbshowPicture;
    private javax.swing.JTextField txAccount;
    private javax.swing.JTextField txBusResNum;
    private javax.swing.JTextField txGaraName;
    private javax.swing.JTextField txGaraReview;
    private javax.swing.JTextField txPassword;
    // End of variables declaration//GEN-END:variables
}
