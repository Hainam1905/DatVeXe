/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package datvexe;


import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author huynh
 */
public class InventoryProfit extends javax.swing.JFrame {
    DefaultTableModel dtf;
    DatVeXe datvexe = new DatVeXe(); 
    Connection connection = datvexe.layKetNoi(); 
    /**
     * Creates new form Inventory
     */
    public InventoryProfit() {
        initComponents();
        
        DatVeXe datvexe = new DatVeXe(); 
        Connection connection;
        connection = datvexe.layKetNoi();
        rdAll.setSelected(true);
        showDetail(dtf, connection);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        cbQuater = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        rdQuater = new javax.swing.JRadioButton();
        rdAll = new javax.swing.JRadioButton();
        rdYear = new javax.swing.JRadioButton();
        rddate = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbYear = new javax.swing.JComboBox<>();
        cbMonth = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        lbTotalProfit = new javax.swing.JLabel();
        rdMonth1 = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbProfit = new javax.swing.JTable();
        btExit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jdatechooser = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1280, 720));

        jPanel1.setPreferredSize(new java.awt.Dimension(1280, 720));
        jPanel1.setRequestFocusEnabled(false);
        jPanel1.setLayout(null);

        cbQuater.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbQuater.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        cbQuater.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbQuaterItemStateChanged(evt);
            }
        });
        jPanel1.add(cbQuater);
        cbQuater.setBounds(670, 140, 60, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 255));
        jLabel4.setText("Quý");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(620, 140, 60, 30);

        buttonGroup1.add(rdQuater);
        rdQuater.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rdQuater.setText("Lọc theo quý và năm");
        rdQuater.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdQuaterItemStateChanged(evt);
            }
        });
        rdQuater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdQuaterActionPerformed(evt);
            }
        });
        jPanel1.add(rdQuater);
        rdQuater.setBounds(600, 200, 150, 30);

        buttonGroup1.add(rdAll);
        rdAll.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rdAll.setText("Không lọc");
        rdAll.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdAllItemStateChanged(evt);
            }
        });
        rdAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdAllActionPerformed(evt);
            }
        });
        jPanel1.add(rdAll);
        rdAll.setBounds(950, 200, 120, 30);

        buttonGroup1.add(rdYear);
        rdYear.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rdYear.setText("Lọc theo năm");
        rdYear.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdYearItemStateChanged(evt);
            }
        });
        jPanel1.add(rdYear);
        rdYear.setBounds(800, 200, 120, 30);

        buttonGroup1.add(rddate);
        rddate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rddate.setText("Lọc theo ngày");
        rddate.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rddateItemStateChanged(evt);
            }
        });
        rddate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rddateActionPerformed(evt);
            }
        });
        jPanel1.add(rddate);
        rddate.setBounds(200, 200, 170, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setText("Năm");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(820, 140, 60, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("Tháng");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(440, 140, 60, 30);

        cbYear.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2018", "2019", "2020", "2021", "2022" }));
        cbYear.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbYearItemStateChanged(evt);
            }
        });
        jPanel1.add(cbYear);
        cbYear.setBounds(880, 140, 70, 30);

        cbMonth.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        cbMonth.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbMonthItemStateChanged(evt);
            }
        });
        cbMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMonthActionPerformed(evt);
            }
        });
        jPanel1.add(cbMonth);
        cbMonth.setBounds(490, 140, 60, 30);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 50, 50));
        jLabel7.setText("TỔNG DOANH THU: ");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(10, 260, 180, 22);

        lbTotalProfit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbTotalProfit.setForeground(new java.awt.Color(255, 50, 50));
        jPanel1.add(lbTotalProfit);
        lbTotalProfit.setBounds(180, 260, 130, 20);

        buttonGroup1.add(rdMonth1);
        rdMonth1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rdMonth1.setText("Lọc theo tháng và năm");
        rdMonth1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdMonth1ItemStateChanged(evt);
            }
        });
        rdMonth1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdMonth1ActionPerformed(evt);
            }
        });
        jPanel1.add(rdMonth1);
        rdMonth1.setBounds(400, 200, 170, 30);

        tbProfit.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tbProfit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nhà xe", "Số vé bán ra ", "Doanh thu"
            }
        ));
        jScrollPane1.setViewportView(tbProfit);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(390, 250, 670, 400);

        btExit.setBackground(new java.awt.Color(0, 0, 255));
        btExit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btExit.setForeground(new java.awt.Color(255, 255, 255));
        btExit.setText("Thoát");
        btExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExitActionPerformed(evt);
            }
        });
        jPanel1.add(btExit);
        btExit.setBounds(1100, 70, 130, 40);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("THỐNG KÊ DOANH THU");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(520, 30, 320, 70);

        jdatechooser.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jdatechooser.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jdatechooserPropertyChange(evt);
            }
        });
        jPanel1.add(jdatechooser);
        jdatechooser.setBounds(250, 140, 140, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 255));
        jLabel6.setText("Ngày");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(200, 140, 70, 30);

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pic/iconTong.png"))); // NOI18N
        jPanel1.add(jLabel12);
        jLabel12.setBounds(50, 20, 160, 123);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pic/BackGround.jpg"))); // NOI18N
        jPanel1.add(jLabel5);
        jLabel5.setBounds(0, 10, 1280, 720);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_btExitActionPerformed

    private void cbYearItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbYearItemStateChanged
       String yearStr = (String) cbYear.getSelectedItem();
       int year = Integer.parseInt(yearStr);
        
//       DatVeXe datvexe = new DatVeXe(); 
//        Connection connection;
//        connection = datvexe.layKetNoi(); 
       if(rddate.isSelected()){
           String monthStr = (String) cbMonth.getSelectedItem();
            int month = Integer.parseInt(monthStr);
        
       showDetailDueMonth(dtf, connection, year,month);
       }else if(rdQuater.isSelected()==true){
           String quaterStr = (String) cbQuater.getSelectedItem();
            int quater = Integer.parseInt(quaterStr); 
            showDetailDueQuater(dtf, connection, year,quater);
       }else if(rdYear.isSelected()){
           showDetailDueYear(dtf, connection, year);
       }else if(rdAll.isSelected()){
           return; 
       }
       
    }//GEN-LAST:event_cbYearItemStateChanged

    private void cbMonthItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbMonthItemStateChanged
       if(rdMonth1.isSelected()==false) return; 
       
        String monthStr = (String) cbMonth.getSelectedItem();
        int month = Integer.parseInt(monthStr);
       
       String yearStr = (String) cbYear.getSelectedItem();
       int year = Integer.parseInt(yearStr);
       
//       DatVeXe datvexe = new DatVeXe(); 
//        Connection connection;
//        connection = datvexe.layKetNoi(); 
       showDetailDueMonth(dtf, connection, year,month);
    }//GEN-LAST:event_cbMonthItemStateChanged

    private void rddateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rddateActionPerformed
       
    }//GEN-LAST:event_rddateActionPerformed

    private void rddateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rddateItemStateChanged
        if(rddate.isSelected()){
             Date date = jdatechooser.getDate();
        java.sql.Date datesql = new java.sql.Date(date.getTime());
            showDetailDueDate(dtf, connection, datesql);
        }
    }//GEN-LAST:event_rddateItemStateChanged

    private void rdYearItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdYearItemStateChanged
        String yearStr = (String) cbYear.getSelectedItem();
       int year = Integer.parseInt(yearStr);
        
       
       showDetailDueYear(dtf, connection, year);
    }//GEN-LAST:event_rdYearItemStateChanged

    private void rdAllItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdAllItemStateChanged
        showDetail(dtf, connection);
    }//GEN-LAST:event_rdAllItemStateChanged

    private void rdQuaterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdQuaterItemStateChanged
       if(rdQuater.isSelected()==false) return ;
        String quaterStr = (String) cbQuater.getSelectedItem();
        int quater = Integer.parseInt(quaterStr);
       
       String yearStr = (String) cbYear.getSelectedItem();
       int year = Integer.parseInt(yearStr);
       
       showDetailDueQuater(dtf, connection, year,quater);
    }//GEN-LAST:event_rdQuaterItemStateChanged

    private void cbQuaterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbQuaterItemStateChanged
       if(rdQuater.isSelected()==false)  return;
       String quaterStr = (String) cbQuater.getSelectedItem();
        int quater = Integer.parseInt(quaterStr);
       
       String yearStr = (String) cbYear.getSelectedItem();
       int year = Integer.parseInt(yearStr);
       
       showDetailDueQuater(dtf, connection, year,quater);
       
    }//GEN-LAST:event_cbQuaterItemStateChanged

    private void cbMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbMonthActionPerformed

    private void rdAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdAllActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdAllActionPerformed

    private void rdQuaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdQuaterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdQuaterActionPerformed

    private void jdatechooserPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jdatechooserPropertyChange
        Date date = jdatechooser.getDate();
//        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
//        String strDate = formatter.format(date);
//        System.out.println(strDate);
        java.sql.Date datesql = new java.sql.Date(date.getTime());
         SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        String strDate = formatter.format(datesql);
        System.out.println(strDate);
        if(rddate.isSelected()){
            showDetailDueDate(dtf, connection, datesql);
        }
    }//GEN-LAST:event_jdatechooserPropertyChange

    private void rdMonth1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdMonth1ItemStateChanged
          String monthStr = (String) cbMonth.getSelectedItem();
        int month = Integer.parseInt(monthStr);
       
       String yearStr = (String) cbYear.getSelectedItem();
       int year = Integer.parseInt(yearStr);
       
//       DatVeXe datvexe = new DatVeXe(); 
//        Connection connection;
//        connection = datvexe.layKetNoi(); 
       showDetailDueMonth(dtf, connection, year,month);
    }//GEN-LAST:event_rdMonth1ItemStateChanged

    private void rdMonth1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdMonth1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdMonth1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InventoryProfit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InventoryProfit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InventoryProfit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InventoryProfit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InventoryProfit().setVisible(true);
            }
        });
    }
    public void showDetail(DefaultTableModel dtf, Connection conn){
        dtf = new DefaultTableModel();
        ListSelectionModel listSelectionModel = tbProfit.getSelectionModel(); 
        listSelectionModel.setSelectionMode(listSelectionModel.SINGLE_SELECTION);
        tbProfit.setModel(dtf);
        float totalProfit = 0; 
       
        dtf.addColumn("Tên nhà xe");
        dtf.addColumn("Số vé bán ra");
        dtf.addColumn("Doanh thu");
        
        String sql = "select * from Gara";
        String sql2 = "select * from ScheduleOfGara where Gara_Name=?";
        String sql3 = "select * from Trip where TripOfGara_no=?";
        String sql4 = "select count (*) from Ticket where Trip_No=? and Is_Paid='true'";
        
        PreparedStatement pstt;
        PreparedStatement pstt2;
        PreparedStatement pstt3;
        PreparedStatement pstt4;
        try {
            pstt = conn.prepareStatement(sql);
            ResultSet rs = pstt.executeQuery();
            while(rs.next()){
                
                //in ra tam thoi: 
                String garaname = rs.getString(1);
                int totalOfTicket =0; 
                float profit = 0; 
                int ticketPrice= 0; 
                float percentProfit =  0.05f; 
                String garapicture = rs.getString(2); 
                String review = rs.getString(3);
                
                //
                
                pstt2 = conn.prepareStatement(sql2);
                pstt2.setString(1, garaname);
                ResultSet rs2 = pstt2.executeQuery();
                while(rs2.next()){
                   
                    String tripOfGaraNo = rs2.getString(1);
                   
                     ticketPrice = rs2.getInt(6);
                    pstt3 = conn.prepareStatement(sql3);
                    pstt3.setString(1, tripOfGaraNo);
                   ResultSet rs3 = pstt3.executeQuery();
                   while(rs3.next()){
                       
                       String tripNo = rs3.getString(1);
//                       System.out.println(rs3.getString(1)+"-"+rs3.getString(2));
                        pstt4 = conn.prepareStatement(sql4);
                        pstt4.setString(1,tripNo);
                        ResultSet rs4 = pstt4.executeQuery();
                        while(rs4.next()){
                            int quantity = rs4.getInt(1);
//                            System.out.println(garaname+"-"+quantity);
                            totalOfTicket+=quantity;
                            profit +=  quantity*ticketPrice*percentProfit;
                           
                        }
                   }
                }
                
                //tam thoi: 
                dtf.addRow(new Object[]{garaname,totalOfTicket,profit});
                totalProfit+=profit; 
            }
            lbTotalProfit.setText(totalProfit+" VND");
        } catch (SQLException ex) {
            Logger.getLogger(InventoryProfit.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    public void showDetailDueYear(DefaultTableModel dtf, Connection conn, int year){
        dtf = new DefaultTableModel();
        ListSelectionModel listSelectionModel = tbProfit.getSelectionModel(); 
        listSelectionModel.setSelectionMode(listSelectionModel.SINGLE_SELECTION);
        tbProfit.setModel(dtf);
        
        System.out.println(" vào day 150");
        dtf.addColumn("Tên nhà xe");
        dtf.addColumn("Số vé bán ra");
        dtf.addColumn("Doanh thu");
        
        String sql = "select * from Gara";
        String sql2 = "select * from ScheduleOfGara where Gara_Name=?";
        String sql3 = "select * from Trip where TripOfGara_no=?";
        String sql4 = "select count (*) from Ticket where Trip_No=? and YEAR(Ticket.Book_Time) =? and Is_Paid='true'";
        
        PreparedStatement pstt;
        PreparedStatement pstt2;
        PreparedStatement pstt3;
        PreparedStatement pstt4;
        float totalProfit = 0; 
        try {
            pstt = conn.prepareStatement(sql);
            ResultSet rs = pstt.executeQuery();
            while(rs.next()){
                
                //in ra tam thoi: 
                String garaname = rs.getString(1);
                int totalOfTicket =0; 
                float profit = 0; 
                int ticketPrice= 0; 
                float percentProfit =  0.05f; 
                String garapicture = rs.getString(2); 
                String review = rs.getString(3);
                
                //
                
                pstt2 = conn.prepareStatement(sql2);
                pstt2.setString(1, garaname);
                ResultSet rs2 = pstt2.executeQuery();
                while(rs2.next()){
                   
                    String tripOfGaraNo = rs2.getString(1);
                   
                     ticketPrice = rs2.getInt(6);
                    pstt3 = conn.prepareStatement(sql3);
                    pstt3.setString(1, tripOfGaraNo);
                   ResultSet rs3 = pstt3.executeQuery();
                   while(rs3.next()){
                       
                       String tripNo = rs3.getString(1);
//                       System.out.println(rs3.getString(1)+"-"+rs3.getString(2));
                        pstt4 = conn.prepareStatement(sql4);
                        pstt4.setString(1,tripNo);
                        pstt4.setInt(2, year);
                        ResultSet rs4 = pstt4.executeQuery();
                        while(rs4.next()){
                            int quantity = rs4.getInt(1);
//                            System.out.println(garaname+"-"+quantity);
                            totalOfTicket+=quantity;
                            profit +=  quantity*ticketPrice*percentProfit;
                           
                        }
                   }
                }
                
                //tam thoi: 
                dtf.addRow(new Object[]{garaname,totalOfTicket,profit});
                totalProfit+=profit; 
            }
            lbTotalProfit.setText(totalProfit+" VND");
        } catch (SQLException ex) {
            Logger.getLogger(InventoryProfit.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    public void showDetailDueQuater(DefaultTableModel dtf, Connection conn, int year,int quater){
        dtf = new DefaultTableModel();
        ListSelectionModel listSelectionModel = tbProfit.getSelectionModel(); 
        listSelectionModel.setSelectionMode(listSelectionModel.SINGLE_SELECTION);
        tbProfit.setModel(dtf);
        float totalProfit = 0; 
        System.out.println(" vào day 150");
        dtf.addColumn("Tên nhà xe");
        dtf.addColumn("Số vé bán ra");
        dtf.addColumn("Doanh thu");
        
        String sql = "select * from Gara";
        String sql2 = "select * from ScheduleOfGara where Gara_Name=?";
        String sql3 = "select * from Trip where TripOfGara_no=?";
        String sql4 = "select count (*) from Ticket where Trip_No=? and YEAR(Ticket.Book_Time) =? and DATEPART(quarter, Ticket.Book_Time)=? and Is_Paid='true'";
        
        PreparedStatement pstt;
        PreparedStatement pstt2;
        PreparedStatement pstt3;
        PreparedStatement pstt4;
        try {
            pstt = conn.prepareStatement(sql);
            ResultSet rs = pstt.executeQuery();
            while(rs.next()){
                
                //in ra tam thoi: 
                String garaname = rs.getString(1);
                
                int totalOfTicket =0; 
                float profit = 0; 
                int ticketPrice= 0; 
                float percentProfit =  0.05f; 
                String garapicture = rs.getString(2); 
                String review = rs.getString(3);
                
                //
                
                pstt2 = conn.prepareStatement(sql2);
                pstt2.setString(1, garaname);
                ResultSet rs2 = pstt2.executeQuery();
                while(rs2.next()){
                   
                    String tripOfGaraNo = rs2.getString(1);
                   
                     ticketPrice = rs2.getInt(6);
                    pstt3 = conn.prepareStatement(sql3);
                    pstt3.setString(1, tripOfGaraNo);
                   ResultSet rs3 = pstt3.executeQuery();
                   while(rs3.next()){
                       
                       String tripNo = rs3.getString(1);
//                       System.out.println(rs3.getString(1)+"-"+rs3.getString(2));
                        pstt4 = conn.prepareStatement(sql4);
                        pstt4.setString(1,tripNo);
                        pstt4.setInt(2, year);
                        pstt4.setInt(3, quater);
                        ResultSet rs4 = pstt4.executeQuery();
                        while(rs4.next()){
                            int quantity = rs4.getInt(1);
//                            System.out.println(garaname+"-"+quantity);
                            totalOfTicket+=quantity;
                            profit +=  quantity*ticketPrice*percentProfit;
                           
                        }
                   }
                }
                
                //tam thoi: 
                dtf.addRow(new Object[]{garaname,totalOfTicket,profit});
                totalProfit+=profit; 
            }
        } catch (SQLException ex) {
            Logger.getLogger(InventoryProfit.class.getName()).log(Level.SEVERE, null, ex);
        }
        lbTotalProfit.setText(totalProfit+" VND");
        
    }
    public void showDetailDueMonth(DefaultTableModel dtf, Connection conn, int year, int month){
        dtf = new DefaultTableModel();
        ListSelectionModel listSelectionModel = tbProfit.getSelectionModel(); 
        listSelectionModel.setSelectionMode(listSelectionModel.SINGLE_SELECTION);
        tbProfit.setModel(dtf);
        
        float totalProfit  =0; 
        dtf.addColumn("Tên nhà xe");
        dtf.addColumn("Số vé bán ra");
        dtf.addColumn("Doanh thu");
        
        String sql = "select * from Gara";
        String sql2 = "select * from ScheduleOfGara where Gara_Name=?";
        String sql3 = "select * from Trip where TripOfGara_no=?";
        String sql4 = "select count (*) from Ticket where Trip_No=? and YEAR(Ticket.Book_Time) =? and MONTH(Ticket.Book_Time) = ? and Is_Paid='true'";
        
        PreparedStatement pstt;
        PreparedStatement pstt2;
        PreparedStatement pstt3;
        PreparedStatement pstt4;
        try {
            pstt = conn.prepareStatement(sql);
            ResultSet rs = pstt.executeQuery();
            while(rs.next()){
                
                //in ra tam thoi: 
                String garaname = rs.getString(1);
                int totalOfTicket =0; 
                float profit = 0; 
                int ticketPrice= 0; 
                float percentProfit =  0.05f; 
                String garapicture = rs.getString(2); 
                String review = rs.getString(3);
                
                //
                
                pstt2 = conn.prepareStatement(sql2);
                pstt2.setString(1, garaname);
                ResultSet rs2 = pstt2.executeQuery();
                while(rs2.next()){
                   
                    String tripOfGaraNo = rs2.getString(1);
                   
                     ticketPrice = rs2.getInt(6);
                    pstt3 = conn.prepareStatement(sql3);
                    pstt3.setString(1, tripOfGaraNo);
                   ResultSet rs3 = pstt3.executeQuery();
                   while(rs3.next()){
                       
                       String tripNo = rs3.getString(1);
//                       System.out.println(rs3.getString(1)+"-"+rs3.getString(2));
                        pstt4 = conn.prepareStatement(sql4);
                        pstt4.setString(1,tripNo);
                        pstt4.setInt(2, year);
                        pstt4.setInt(3, month);
                        ResultSet rs4 = pstt4.executeQuery();
                        while(rs4.next()){
                            int quantity = rs4.getInt(1);
//                            System.out.println(garaname+"-"+quantity);
                            totalOfTicket+=quantity;
                            profit +=  quantity*ticketPrice*percentProfit;
                           
                        }
                   }
                }
                
                //tam thoi: 
                dtf.addRow(new Object[]{garaname,totalOfTicket,profit});
                totalProfit += profit; 
            }
        } catch (SQLException ex) {
            Logger.getLogger(InventoryProfit.class.getName()).log(Level.SEVERE, null, ex);
        }
        lbTotalProfit.setText(totalProfit+" VND");
        
    }
    public void showDetailDueDate(DefaultTableModel dtf, Connection conn, java.sql.Date date1){
        dtf = new DefaultTableModel();
        ListSelectionModel listSelectionModel = tbProfit.getSelectionModel(); 
        listSelectionModel.setSelectionMode(listSelectionModel.SINGLE_SELECTION);
        tbProfit.setModel(dtf);
        
        float totalProfit  =0; 
        dtf.addColumn("Tên nhà xe");
        dtf.addColumn("Số vé bán ra");
        dtf.addColumn("Doanh thu");
        
        String sql = "select * from Gara";
        String sql2 = "select * from ScheduleOfGara where Gara_Name=?";
        String sql3 = "select * from Trip where TripOfGara_no=?";
        String sql4 = "select count (*) from Ticket where Trip_No=? and CONVERT(DATE,Ticket.Book_Time)=? and Is_Paid='true'";
        
        PreparedStatement pstt;
        PreparedStatement pstt2;
        PreparedStatement pstt3;
        PreparedStatement pstt4;
        System.out.println("vao 785");
        try {
            pstt = conn.prepareStatement(sql);
            ResultSet rs = pstt.executeQuery();
            while(rs.next()){
                
                //in ra tam thoi: 
                String garaname = rs.getString(1);
                int totalOfTicket =0; 
                float profit = 0; 
                int ticketPrice= 0; 
                float percentProfit =  0.05f; 
                String garapicture = rs.getString(2); 
                String review = rs.getString(3);
                
                //
                
                pstt2 = conn.prepareStatement(sql2);
                pstt2.setString(1, garaname);
                ResultSet rs2 = pstt2.executeQuery();
                while(rs2.next()){
                   
                    String tripOfGaraNo = rs2.getString(1);
                   
                     ticketPrice = rs2.getInt(6);
                    pstt3 = conn.prepareStatement(sql3);
                    pstt3.setString(1, tripOfGaraNo);
                   ResultSet rs3 = pstt3.executeQuery();
                   while(rs3.next()){
                       
                       String tripNo = rs3.getString(1);
//                       System.out.println(rs3.getString(1)+"-"+rs3.getString(2));
                        pstt4 = conn.prepareStatement(sql4);
                        pstt4.setString(1,tripNo);
                        pstt4.setDate(2, date1);
                        ResultSet rs4 = pstt4.executeQuery();
                        while(rs4.next()){
                            int quantity = rs4.getInt(1);
//                            System.out.println(garaname+"-"+quantity);
                            totalOfTicket+=quantity;
                            profit +=  quantity*ticketPrice*percentProfit;
                           
                        }
                   }
                }
                
                //tam thoi: 
                dtf.addRow(new Object[]{garaname,totalOfTicket,profit});
                totalProfit += profit; 
            }
        } catch (SQLException ex) {
            Logger.getLogger(InventoryProfit.class.getName()).log(Level.SEVERE, null, ex);
        }
        lbTotalProfit.setText(totalProfit+" VND");
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btExit;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbMonth;
    private javax.swing.JComboBox<String> cbQuater;
    private javax.swing.JComboBox<String> cbYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdatechooser;
    private javax.swing.JLabel lbTotalProfit;
    private javax.swing.JRadioButton rdAll;
    private javax.swing.JRadioButton rdMonth1;
    private javax.swing.JRadioButton rdQuater;
    private javax.swing.JRadioButton rdYear;
    private javax.swing.JRadioButton rddate;
    private javax.swing.JTable tbProfit;
    // End of variables declaration//GEN-END:variables
}
