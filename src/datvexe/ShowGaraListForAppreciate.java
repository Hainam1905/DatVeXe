/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package datvexe;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author huynh
 */
public class ShowGaraListForAppreciate extends javax.swing.JFrame {
    DefaultTableModel dtf;
    DatVeXe datvexe = new DatVeXe(); 
        Connection connection = datvexe.layKetNoi();
    
    /**
     * Creates new form ManageGara
     */
    public ShowGaraListForAppreciate() {
        initComponents();
        
        performed(connection);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbListGaras = new javax.swing.JTable();
        btAppreciate = new javax.swing.JButton();
        ckShowAll = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        txgaraName = new javax.swing.JTextField();
        btSearch = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("DANH SÁCH NHÀ XE");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(470, 40, 270, 40);

        tbListGaras.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tbListGaras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Tên nhà xe", "Đánh giá", "Giấy phép kinh doanh", "Trạng thái"
            }
        ));
        jScrollPane1.setViewportView(tbListGaras);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(160, 232, 930, 340);

        btAppreciate.setBackground(new java.awt.Color(0, 0, 255));
        btAppreciate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btAppreciate.setForeground(new java.awt.Color(255, 255, 255));
        btAppreciate.setText("Đánh giá nhà xe");
        btAppreciate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAppreciateActionPerformed(evt);
            }
        });
        jPanel1.add(btAppreciate);
        btAppreciate.setBounds(500, 600, 270, 50);

        ckShowAll.setBackground(new java.awt.Color(0, 0, 255));
        ckShowAll.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ckShowAll.setForeground(new java.awt.Color(255, 255, 255));
        ckShowAll.setText("Hiển thị toàn bộ danh sách");
        ckShowAll.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckShowAllItemStateChanged(evt);
            }
        });
        ckShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckShowAllActionPerformed(evt);
            }
        });
        jPanel1.add(ckShowAll);
        ckShowAll.setBounds(880, 80, 210, 40);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("Nhập tên nhà xe:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(70, 160, 120, 30);

        txgaraName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txgaraName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txgaraNameActionPerformed(evt);
            }
        });
        jPanel1.add(txgaraName);
        txgaraName.setBounds(190, 160, 260, 30);

        btSearch.setBackground(new java.awt.Color(0, 0, 255));
        btSearch.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btSearch.setForeground(new java.awt.Color(255, 255, 255));
        btSearch.setText("Tìm");
        btSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSearchActionPerformed(evt);
            }
        });
        jPanel1.add(btSearch);
        btSearch.setBounds(490, 150, 150, 50);

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pic/iconTong.png"))); // NOI18N
        jPanel1.add(jLabel12);
        jLabel12.setBounds(50, 20, 160, 123);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pic/BackGround.jpg"))); // NOI18N
        jPanel1.add(jLabel3);
        jLabel3.setBounds(0, 0, 1280, 720);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAppreciateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAppreciateActionPerformed
        if(tbListGaras.getSelectedRow()==-1) return ; 
        
        
        String sql = "select Gara_Picture,Account,Gara_Review from Gara where Gara_Name=?";
        String sql2= "select password from Account where account = ?"; 
        
        
        String garaName = (String) tbListGaras.getValueAt(tbListGaras.getSelectedRow(),0);
        String picture ="";
        String account="";
        String password="";
        String review = (String) tbListGaras.getValueAt(tbListGaras.getSelectedRow(),1);
        float garaPoint = 0;
        String BusResNum = (String) tbListGaras.getValueAt(tbListGaras.getSelectedRow(),2);
        String active = (String) tbListGaras.getValueAt(tbListGaras.getSelectedRow(),3);
        PreparedStatement pstt;
        try {
            pstt = connection.prepareStatement(sql);
        pstt.setString(1, garaName);
        ResultSet rs = pstt.executeQuery(); 
        if(rs.next()){
            picture = rs.getString(1);
            account = rs.getString(2);
            garaPoint = rs.getFloat(3);
        }
        } catch (SQLException ex) {
            Logger.getLogger(ShowGaraListForAppreciate.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        PreparedStatement pstt2;
        try {
            pstt2 = connection.prepareStatement(sql2);
            pstt2.setString(1, account);
            ResultSet rs = pstt2.executeQuery();
            if(rs.next()){
                password = rs.getString(1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ShowGaraListForAppreciate.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
//        UpGara upGara = new UpGara(this, rootPaneCheckingEnabled,garaName,picture,review,garaPoint,BusResNum,active,account, password);
//        upGara.setLocationRelativeTo(null);
//        upGara.setVisible(true);


        AppreciateGara appreciate = new AppreciateGara(this, rootPaneCheckingEnabled, garaName, picture, review, garaPoint, BusResNum, active, account, password);
        appreciate.setLocationRelativeTo(null);
        appreciate.setVisible(true);
        performed(connection);
    }//GEN-LAST:event_btAppreciateActionPerformed

    private void btSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSearchActionPerformed
       String garaName = txgaraName.getText();
       garaName = garaName.trim();
       ckShowAll.setSelected(false);
       
      
        performedDueName(connection, garaName);
       
    }//GEN-LAST:event_btSearchActionPerformed

    private void ckShowAllItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckShowAllItemStateChanged
        if(ckShowAll.isSelected()){
            performed(connection);
        }
    }//GEN-LAST:event_ckShowAllItemStateChanged

    private void txgaraNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txgaraNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txgaraNameActionPerformed

    private void ckShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckShowAllActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckShowAllActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowGaraListForAppreciate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowGaraListForAppreciate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowGaraListForAppreciate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowGaraListForAppreciate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShowGaraListForAppreciate().setVisible(true);
            }
        });
    }
    public void performedActiveGaras(DefaultTableModel dtf, Connection conn){
        String sql = "SELECT * FROM Gara where active = 'True'"; 
        
        
        
        ResultSet rs; 
        try { 
            Statement stt = conn.createStatement();
            rs = stt.executeQuery(sql); 
            while(rs.next()){
            String garaName = rs.getString(1);
            float garaPoint = rs.getFloat(3);
            String garaReview=""; 
            if(garaPoint>=1 && garaPoint<2){
                garaReview = "Rất tệ";
            }else if(garaPoint>=2 && garaPoint<3){
                garaReview = "Tệ";
            }else if(garaPoint>=3 && garaPoint<4){
                garaReview = "Tạm ổn";
            }else if(garaPoint>=4 && garaPoint<4.5){
                garaReview = "Tốt";
            }else if(garaPoint>=4.5){
                garaReview = "Tuyệt vời";
            }else if(garaPoint==-1){
                garaReview = "Chưa được đánh giá";
            }
            String Bus_Res_number = rs.getString(4);
            boolean active = rs.getBoolean(5);
            String statement; 
            if(active==true) statement = "Đang hợp tác";
            else statement = "Ngừng hợp tác";
               
            dtf.addRow(new Object[]{garaName,garaReview,Bus_Res_number,statement});
            }
        } catch (SQLException ex) {
            Logger.getLogger(ShowStaffList.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    public void performedInActiveGaras(DefaultTableModel dtf,Connection conn){
        String sql = "SELECT * FROM Gara where active = 'False'"; 
        
        ResultSet rs; 
        try { 
            Statement stt = conn.createStatement();
            rs = stt.executeQuery(sql); 
            while(rs.next()){
            String garaName = rs.getString(1);
            float garaPoint = rs.getFloat(3);
            String garaReview=""; 
            if(garaPoint>=1 && garaPoint<2){
                garaReview = "Rất tệ";
            }else if(garaPoint>=2 && garaPoint<3){
                garaReview = "Tệ";
            }else if(garaPoint>=3 && garaPoint<4){
                garaReview = "Tạm ổn";
            }else if(garaPoint>=4 && garaPoint<4.5){
                garaReview = "Tốt";
            }else if(garaPoint>=4.5){
                garaReview = "Tuyệt vời";   
            }else if(garaPoint==-1){
                garaReview = "Chưa được đánh giá";   
            }
            String Bus_Res_number = rs.getString(4);
            
            String statement = "Ngừng hợp tác";
            
            
            dtf.addRow(new Object[]{garaName,garaReview,Bus_Res_number,statement});
            
            }
        } catch (SQLException ex) {
            Logger.getLogger(ShowStaffList.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    public void performed(Connection conn){
        dtf = new DefaultTableModel();
        ListSelectionModel listSelectionModel = tbListGaras.getSelectionModel(); 
        listSelectionModel.setSelectionMode(listSelectionModel.SINGLE_SELECTION);
        tbListGaras.setModel(dtf);
        
        
        dtf.addColumn("Tên nhà xe");
        dtf.addColumn("Đánh giá");
        dtf.addColumn("Giấy phép kinh doanh");
        dtf.addColumn("Trạng thái");
        performedActiveGaras(dtf, conn);
        performedInActiveGaras(dtf,conn);
    }
    public void performedDueName(Connection conn, String name){
        dtf = new DefaultTableModel();
        ListSelectionModel listSelectionModel = tbListGaras.getSelectionModel(); 
        listSelectionModel.setSelectionMode(listSelectionModel.SINGLE_SELECTION);
        tbListGaras.setModel(dtf);
        
        
        dtf.addColumn("Tên nhà xe");
        dtf.addColumn("Đánh giá");
        dtf.addColumn("Giấy phép kinh doanh");
        dtf.addColumn("Trạng thái");
        String sql = "SELECT * FROM Gara where Gara_Name like N'%"+name+"%'"; 
        
        
        
        ResultSet rs; 
        try { 
            Statement stt = conn.createStatement();
            rs = stt.executeQuery(sql); 
            while(rs.next()){
            String garaName = rs.getString(1);
            float garaPoint = rs.getFloat(3);
            String garaReview=""; 
            if(garaPoint>=1 && garaPoint<2){
                garaReview = "Rất tệ";
            }else if(garaPoint>=2 && garaPoint<3){
                garaReview = "Tệ";
            }else if(garaPoint>=3 && garaPoint<4){
                garaReview = "Tạm ổn";
            }else if(garaPoint>=4 && garaPoint<4.5){
                garaReview = "Tốt";
            }else if(garaPoint>=4.5){
                garaReview = "Tuyệt vời";
            }else if(garaPoint==-1){
                garaReview = "Chưa được đánh giá";
            }
            String Bus_Res_number = rs.getString(4);
            boolean active = rs.getBoolean(5);
            String statement; 
            if(active==true) statement = "Đang hợp tác";
            else statement = "Ngừng hợp tác";
               
            dtf.addRow(new Object[]{garaName,garaReview,Bus_Res_number,statement});
            }
        } catch (SQLException ex) {
            Logger.getLogger(ShowStaffList.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAppreciate;
    private javax.swing.JButton btSearch;
    private javax.swing.JCheckBox ckShowAll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbListGaras;
    private javax.swing.JTextField txgaraName;
    // End of variables declaration//GEN-END:variables
}
